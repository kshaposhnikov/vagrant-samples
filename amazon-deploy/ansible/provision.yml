---
- name: Provision ec2 instances
  hosts: localhost
  connection: local
  gather_facts: False
  
  vars:
    ec2_region: "eu-central-1"
    image_id: "ami-06a83869"
    keypair_name: pair

  vars_files:
    - creds.yml

  tasks:

    - name: Launch instances
      ec2: 
        region: "{{ ec2_region }}"
        ec2_access_key: "{{ ec2_access_key }}"
        ec2_secret_key: "{{ ec2_secret_key }}"
        keypair: "{{ keypair_name }}"
        group_id: sg-f3a58499
        instance_type: t2.micro
        image: "{{ image_id }}"
        instance_tags:
          Name: petclinic-test
        wait: true
      register: ec2

    - add_host: hostname={{ item.public_ip }} groupname=ec2hosts
      with_items: ec2.instances

    - name: wait for instances to listen on port:22
      wait_for:
        state=started
        host={{ item.public_dns_name }}
        port=22
      with_items: ec2.instances

- name: Install Docker
  hosts: ec2hosts
  gather_facts: True
  user: ec2-user
  sudo: True

  tasks:
    - name: Install docker
      yum:
        name: "{{ item }}"
        update_cache: yes
      with_items:
        - docker
        - python-setuptools

    - name: Install pypi
      easy_install: name=pip

    - name: Install docker-py
      pip:
        name: "{{ item }}"
        state: latest
      with_items:
        - docker-py

    - name: Start docker
      service:
        name: docker
        state: running

    - name: Add ec2 user to the docker group 
      user:
        name: ec2-user
        groups: docker,
        append: True
      sudo: True

- name: Run Jenkins
  hosts: ec2hosts
  gather_facts: True
  user: ec2-user
  sudo: True

  tasks:
    - name: Start container with Jenkins
      docker:
        image: kshaposhnikov/jenkins-petclinic:1
        ports: 8080:8080
        privileged: true
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
