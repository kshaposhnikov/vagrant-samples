Refereces: 
    https://docs.openshift.com/container-platform/3.3/admin_guide/manage_scc.html#grant-access-to-the-privileged-scc
    https://docs.openshift.com/enterprise/3.2/install_config/storage_examples/privileged_pod_storage.html
    https://docs.openshift.com/enterprise/3.0/admin_guide/manage_scc.html
    https://piotrminkowski.wordpress.com/2017/03/20/microservices-continuous-delivery-with-docker-and-jenkins/
    https://github.com/kranthiB/Build-Continuous-Integration-with-Jenkins-and-Dokcer
    https://getintodevops.com/blog/building-your-first-docker-image-with-jenkins-2-guide-for-developers
    https://github.com/openshift/origin/issues/10483
    https://stackoverflow.com/questions/33451831/how-to-launch-a-new-docker-container-from-inside-a-docker-container-on-openshift
    https://support.cloudbees.com/hc/en-us/articles/230922468-Pipeline-I-would-like-to-use-Docker-CLI-inside-of-a-Pipeline-job

Prerequests:
    1. Start minishift
        minishift.exe start --vm-driver virtualbox
    2. Connect to openshift as admin
        oc login https://192.168.99.100:8443 -u system:admin

1. Add developer user to privileged
    oc adm policy add-scc-to-user privileged developer
2. Create new project
    oc new-project petclinic-ci-manual
3. Create new application for Jenkins
    oc new-app jenkins/jenkins:lts
    Expose ports
        oc expose svc jenkins
4. Add all existing Service Accounts to privileged
    oc adm policy add-scc-to-user privileged system:serviceaccount:petclinic-ci-manual:deployer
    oc adm policy add-scc-to-user privileged system:serviceaccount:petclinic-ci-manual:builder
    oc adm policy add-scc-to-user privileged system:serviceaccount:petclinic-ci-manual:default
5. Go to Host Openshift (need to open virtaul machine in virtual box directly) and execute "chmod 666 /var/run/docker.sock"
6. Remove pod in the case when it exists
    oc get pods
    oc delete pod <pod-name>
7. Update deployment-script in order to get opportunity to run container as privileged. Need to use following script.
********************************************************************************
apiVersion: v1
kind: ReplicationController
metadata:
  annotations:
    openshift.io/deployer-pod.name: jenkins-2-deploy
    openshift.io/deployment-config.latest-version: '2'
    openshift.io/deployment-config.name: jenkins
    openshift.io/deployment.phase: Complete
    openshift.io/deployment.replicas: ''
    openshift.io/deployment.status-reason: config change
    openshift.io/encoded-deployment-config: >
      {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"jenkins","namespace":"petclinic-ci-manual","selfLink":"/apis/apps.openshift.io/v1/namespaces/petclinic-ci-manual/deploymentconfigs/jenkins","uid":"f9dfa56a-ddbd-11e7-a943-2ad1c69f7a3d","resourceVersion":"14737","generation":5,"creationTimestamp":"2017-12-10T15:22:46Z","labels":{"app":"jenkins"},"annotations":{"openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["jenkins"],"from":{"kind":"ImageStreamTag","namespace":"petclinic-ci-manual","name":"jenkins:lts"},"lastTriggeredImage":"jenkins/jenkins@sha256:643f147981c83f4654a1e94cb74f6aa4100da97951bb6c23f649f9338689cc56"}}],"replicas":1,"test":false,"selector":{"app":"jenkins","deploymentconfig":"jenkins"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"jenkins","deploymentconfig":"jenkins"},"annotations":{"openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"jenkins-volume-1","emptyDir":{}},{"name":"socket","emptyDir":{}}],"containers":[{"name":"jenkins","image":"jenkins/jenkins@sha256:643f147981c83f4654a1e94cb74f6aa4100da97951bb6c23f649f9338689cc56","ports":[{"containerPort":50000,"protocol":"TCP"},{"containerPort":8080,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"jenkins-volume-1","mountPath":"/var/jenkins_home"},{"name":"socket","mountPath":"/var/run/docker.sock"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":4,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config
      change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-12-10T15:22:51Z","lastTransitionTime":"2017-12-10T15:22:51Z","message":"Deployment
      config has minimum
      availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-10T15:22:52Z","lastTransitionTime":"2017-12-10T15:22:52Z","reason":"NewReplicationControllerAvailable","message":"replication
      controller \"jenkins-1\" successfully rolled out"}],"readyReplicas":1}}
  creationTimestamp: '2017-12-10T15:34:19Z'
  generation: 6
  labels:
    app: jenkins
    openshift.io/deployment-config.name: jenkins
  name: jenkins-2
  namespace: petclinic-ci-manual
  ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: jenkins
      uid: f9dfa56a-ddbd-11e7-a943-2ad1c69f7a3d
  resourceVersion: '15995'
  selfLink: /api/v1/namespaces/petclinic-ci-manual/replicationcontrollers/jenkins-2
  uid: 9693dd09-ddbf-11e7-a943-2ad1c69f7a3d
spec:
  replicas: 1
  selector:
    app: jenkins
    deployment: jenkins-2
    deploymentconfig: jenkins
  template:
    metadata:
      annotations:
        openshift.io/deployment-config.latest-version: '2'
        openshift.io/deployment-config.name: jenkins
        openshift.io/deployment.name: jenkins-2
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        app: jenkins
        deployment: jenkins-2
        deploymentconfig: jenkins
    spec:
      containers:
        - image: >-
            jenkins/jenkins@sha256:643f147981c83f4654a1e94cb74f6aa4100da97951bb6c23f649f9338689cc56
          imagePullPolicy: IfNotPresent
          name: jenkins
          ports:
            - containerPort: 50000
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-volume-1
            - mountPath: /var/run/docker.sock
              name: socket
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: jenkins-volume-1
        - hostPath:
            path: /var/run/docker.sock
          name: socket
status:
  availableReplicas: 1
  fullyLabeledReplicas: 1
  observedGeneration: 6
  readyReplicas: 1
  replicas: 1
******************************************************************************************

8. Configure Credentials for Docker registry
9. For Jenkins Job need to use following pipeleine script
node {
  def mvnHome
  stage('Preparation') { // for display purposes
      // Get some code from a GitHub repository
      git 'https://github.com/kshaposhnikov/spring-petclinic.git'
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configured
      // **       in the global configuration.           
      mvnHome = tool 'M3'
  }
  stage('Build') {
      // Run the maven build
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' clean package"
      } else {
         bat(/"${mvnHome}\bin\mvn" clean package/)
      }
  }
  stage('Test Results') {
      junit '**/target/surefire-reports/TEST-*.xml'
  }
   stage('Image') {
       sh "mv target/spring-petclinic-1.5.1.jar target/spring-petclinic.jar"
       docker.withTool("docker") {
            docker.withRegistry("https://registry.hub.docker.com", "docker-registry") {
                def image = docker.build "kshaposhnikov/petclinic-test:1"
                image.push()
            }
       }
   }
}
10. Need to create new application for deploing petclinic
11. Install "OpenShift Client Jenkins Plugin" for jenkins